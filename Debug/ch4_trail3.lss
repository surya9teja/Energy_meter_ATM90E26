
ch4_trail3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000818  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000008e  00800060  00000818  000008ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000006  008000ee  008000ee  0000093a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000093a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000096c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c0  00000000  00000000  000009a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001722  00000000  00000000  00000a68  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007ae  00000000  00000000  0000218a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000067b  00000000  00000000  00002938  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000019c  00000000  00000000  00002fb4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000722  00000000  00000000  00003150  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000759  00000000  00000000  00003872  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b0  00000000  00000000  00003fcb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e8 e1       	ldi	r30, 0x18	; 24
  68:	f8 e0       	ldi	r31, 0x08	; 8
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ae 3e       	cpi	r26, 0xEE	; 238
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	ae ee       	ldi	r26, 0xEE	; 238
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a4 3f       	cpi	r26, 0xF4	; 244
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 ed 01 	call	0x3da	; 0x3da <main>
  8a:	0c 94 0a 04 	jmp	0x814	; 0x814 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <_Z8spi_initv>:
	}

	double ATM90E26::GetFrequency(){
		unsigned short freq=CommEnergyIC(1,Freq,0xFFFF);
		return (double)freq/100;
	}
  92:	80 ea       	ldi	r24, 0xA0	; 160
  94:	87 bb       	out	0x17, r24	; 23
  96:	8b e5       	ldi	r24, 0x5B	; 91
  98:	8d b9       	out	0x0d, r24	; 13
  9a:	1e b8       	out	0x0e, r1	; 14
  9c:	08 95       	ret

0000009e <_Z8spi_sendh>:
  9e:	8f b9       	out	0x0f, r24	; 15
  a0:	77 9b       	sbis	0x0e, 7	; 14
  a2:	fe cf       	rjmp	.-4      	; 0xa0 <_Z8spi_sendh+0x2>
  a4:	8f b1       	in	r24, 0x0f	; 15
  a6:	08 95       	ret

000000a8 <_ZN8ATM90E2612CommEnergyICEhht>:
  a8:	0f 93       	push	r16
  aa:	1f 93       	push	r17
  ac:	cf 93       	push	r28
  ae:	df 93       	push	r29
  b0:	00 d0       	rcall	.+0      	; 0xb2 <_ZN8ATM90E2612CommEnergyICEhht+0xa>
  b2:	cd b7       	in	r28, 0x3d	; 61
  b4:	de b7       	in	r29, 0x3e	; 62
  b6:	06 2f       	mov	r16, r22
  b8:	32 27       	eor	r19, r18
  ba:	23 27       	eor	r18, r19
  bc:	32 27       	eor	r19, r18
  be:	3a 83       	std	Y+2, r19	; 0x02
  c0:	29 83       	std	Y+1, r18	; 0x01
  c2:	20 e8       	ldi	r18, 0x80	; 128
  c4:	62 9f       	mul	r22, r18
  c6:	c0 01       	movw	r24, r0
  c8:	11 24       	eor	r1, r1
  ca:	14 2f       	mov	r17, r20
  cc:	18 2b       	or	r17, r24
  ce:	c4 98       	cbi	0x18, 4	; 24
  d0:	85 e3       	ldi	r24, 0x35	; 53
  d2:	8a 95       	dec	r24
  d4:	f1 f7       	brne	.-4      	; 0xd2 <_ZN8ATM90E2612CommEnergyICEhht+0x2a>
  d6:	00 00       	nop
  d8:	0e 94 49 00 	call	0x92	; 0x92 <_Z8spi_initv>
  dc:	81 2f       	mov	r24, r17
  de:	0e 94 4f 00 	call	0x9e	; 0x9e <_Z8spi_sendh>
  e2:	25 e1       	ldi	r18, 0x15	; 21
  e4:	2a 95       	dec	r18
  e6:	f1 f7       	brne	.-4      	; 0xe4 <_ZN8ATM90E2612CommEnergyICEhht+0x3c>
  e8:	00 00       	nop
  ea:	00 23       	and	r16, r16
  ec:	49 f0       	breq	.+18     	; 0x100 <_ZN8ATM90E2612CommEnergyICEhht+0x58>
  ee:	80 e0       	ldi	r24, 0x00	; 0
  f0:	0e 94 4f 00 	call	0x9e	; 0x9e <_Z8spi_sendh>
  f4:	89 83       	std	Y+1, r24	; 0x01
  f6:	80 e0       	ldi	r24, 0x00	; 0
  f8:	0e 94 4f 00 	call	0x9e	; 0x9e <_Z8spi_sendh>
  fc:	8a 83       	std	Y+2, r24	; 0x02
  fe:	06 c0       	rjmp	.+12     	; 0x10c <_ZN8ATM90E2612CommEnergyICEhht+0x64>
 100:	89 81       	ldd	r24, Y+1	; 0x01
 102:	0e 94 4f 00 	call	0x9e	; 0x9e <_Z8spi_sendh>
 106:	8a 81       	ldd	r24, Y+2	; 0x02
 108:	0e 94 4f 00 	call	0x9e	; 0x9e <_Z8spi_sendh>
 10c:	c4 9a       	sbi	0x18, 4	; 24
 10e:	85 e3       	ldi	r24, 0x35	; 53
 110:	8a 95       	dec	r24
 112:	f1 f7       	brne	.-4      	; 0x110 <_ZN8ATM90E2612CommEnergyICEhht+0x68>
 114:	00 00       	nop
 116:	89 81       	ldd	r24, Y+1	; 0x01
 118:	9a 81       	ldd	r25, Y+2	; 0x02
 11a:	98 27       	eor	r25, r24
 11c:	89 27       	eor	r24, r25
 11e:	98 27       	eor	r25, r24
 120:	0f 90       	pop	r0
 122:	0f 90       	pop	r0
 124:	df 91       	pop	r29
 126:	cf 91       	pop	r28
 128:	1f 91       	pop	r17
 12a:	0f 91       	pop	r16
 12c:	08 95       	ret

0000012e <_ZN8ATM90E2614GetLineVoltageEv>:
 12e:	2f ef       	ldi	r18, 0xFF	; 255
 130:	3f ef       	ldi	r19, 0xFF	; 255
 132:	49 e4       	ldi	r20, 0x49	; 73
 134:	61 e0       	ldi	r22, 0x01	; 1
 136:	0e 94 54 00 	call	0xa8	; 0xa8 <_ZN8ATM90E2612CommEnergyICEhht>
 13a:	bc 01       	movw	r22, r24
 13c:	80 e0       	ldi	r24, 0x00	; 0
 13e:	90 e0       	ldi	r25, 0x00	; 0
 140:	0e 94 df 02 	call	0x5be	; 0x5be <__floatunsisf>
 144:	20 e0       	ldi	r18, 0x00	; 0
 146:	30 e0       	ldi	r19, 0x00	; 0
 148:	48 ec       	ldi	r20, 0xC8	; 200
 14a:	52 e4       	ldi	r21, 0x42	; 66
 14c:	0e 94 6d 02 	call	0x4da	; 0x4da <__divsf3>
 150:	08 95       	ret

00000152 <_ZN8ATM90E2614GetMeterStatusEv>:
 152:	2f ef       	ldi	r18, 0xFF	; 255
 154:	3f ef       	ldi	r19, 0xFF	; 255
 156:	46 e4       	ldi	r20, 0x46	; 70
 158:	61 e0       	ldi	r22, 0x01	; 1
 15a:	0e 94 54 00 	call	0xa8	; 0xa8 <_ZN8ATM90E2612CommEnergyICEhht>
 15e:	08 95       	ret

00000160 <_ZN8ATM90E2614GetLineCurrentEv>:
 160:	2f ef       	ldi	r18, 0xFF	; 255
 162:	3f ef       	ldi	r19, 0xFF	; 255
 164:	48 e4       	ldi	r20, 0x48	; 72
 166:	61 e0       	ldi	r22, 0x01	; 1
 168:	0e 94 54 00 	call	0xa8	; 0xa8 <_ZN8ATM90E2612CommEnergyICEhht>
 16c:	bc 01       	movw	r22, r24
 16e:	80 e0       	ldi	r24, 0x00	; 0
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	0e 94 df 02 	call	0x5be	; 0x5be <__floatunsisf>
 176:	20 e0       	ldi	r18, 0x00	; 0
 178:	30 e0       	ldi	r19, 0x00	; 0
 17a:	4a e7       	ldi	r20, 0x7A	; 122
 17c:	54 e4       	ldi	r21, 0x44	; 68
 17e:	0e 94 6d 02 	call	0x4da	; 0x4da <__divsf3>
 182:	08 95       	ret

00000184 <_ZN8ATM90E2614GetActivePowerEv>:
 184:	2f ef       	ldi	r18, 0xFF	; 255
 186:	3f ef       	ldi	r19, 0xFF	; 255
 188:	4a e4       	ldi	r20, 0x4A	; 74
 18a:	61 e0       	ldi	r22, 0x01	; 1
 18c:	0e 94 54 00 	call	0xa8	; 0xa8 <_ZN8ATM90E2612CommEnergyICEhht>
 190:	bc 01       	movw	r22, r24
 192:	99 0f       	add	r25, r25
 194:	88 0b       	sbc	r24, r24
 196:	99 0b       	sbc	r25, r25
 198:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <__floatsisf>
 19c:	08 95       	ret

0000019e <_ZN8ATM90E2616GetReactivePowerEv>:
 19e:	2f ef       	ldi	r18, 0xFF	; 255
 1a0:	3f ef       	ldi	r19, 0xFF	; 255
 1a2:	4b e4       	ldi	r20, 0x4B	; 75
 1a4:	61 e0       	ldi	r22, 0x01	; 1
 1a6:	0e 94 54 00 	call	0xa8	; 0xa8 <_ZN8ATM90E2612CommEnergyICEhht>
 1aa:	bc 01       	movw	r22, r24
 1ac:	99 0f       	add	r25, r25
 1ae:	88 0b       	sbc	r24, r24
 1b0:	99 0b       	sbc	r25, r25
 1b2:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <__floatsisf>
 1b6:	08 95       	ret

000001b8 <_ZN8ATM90E2614GetPowerFactorEv>:

	double ATM90E26::GetPowerFactor(){
		short int pf= (short int)CommEnergyIC(1,PowerF,0xFFFF); //MSB is signed bit
 1b8:	2f ef       	ldi	r18, 0xFF	; 255
 1ba:	3f ef       	ldi	r19, 0xFF	; 255
 1bc:	4d e4       	ldi	r20, 0x4D	; 77
 1be:	61 e0       	ldi	r22, 0x01	; 1
 1c0:	0e 94 54 00 	call	0xa8	; 0xa8 <_ZN8ATM90E2612CommEnergyICEhht>
		//if negative
		if(pf&0x8000){
 1c4:	99 23       	and	r25, r25
 1c6:	34 f4       	brge	.+12     	; 0x1d4 <_ZN8ATM90E2614GetPowerFactorEv+0x1c>
			pf=(pf&0x7FFF)*-1;
 1c8:	bc 01       	movw	r22, r24
 1ca:	7f 77       	andi	r23, 0x7F	; 127
 1cc:	88 27       	eor	r24, r24
 1ce:	99 27       	eor	r25, r25
 1d0:	86 1b       	sub	r24, r22
 1d2:	97 0b       	sbc	r25, r23
		}
		return (double)pf/1000;
 1d4:	bc 01       	movw	r22, r24
 1d6:	99 0f       	add	r25, r25
 1d8:	88 0b       	sbc	r24, r24
 1da:	99 0b       	sbc	r25, r25
 1dc:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <__floatsisf>
 1e0:	20 e0       	ldi	r18, 0x00	; 0
 1e2:	30 e0       	ldi	r19, 0x00	; 0
 1e4:	4a e7       	ldi	r20, 0x7A	; 122
 1e6:	54 e4       	ldi	r21, 0x44	; 68
 1e8:	0e 94 6d 02 	call	0x4da	; 0x4da <__divsf3>
	}
 1ec:	08 95       	ret

000001ee <_ZN8ATM90E2615GetImportEnergyEv>:

	double ATM90E26::GetImportEnergy(){
		//Register is cleared after reading
		unsigned short ienergy=CommEnergyIC(1,APenergy,0xFFFF);
 1ee:	2f ef       	ldi	r18, 0xFF	; 255
 1f0:	3f ef       	ldi	r19, 0xFF	; 255
 1f2:	40 e4       	ldi	r20, 0x40	; 64
 1f4:	61 e0       	ldi	r22, 0x01	; 1
 1f6:	0e 94 54 00 	call	0xa8	; 0xa8 <_ZN8ATM90E2612CommEnergyICEhht>
		return (double)ienergy*0.0001; //returns kWh if PL constant set to 1000imp/kWh
 1fa:	bc 01       	movw	r22, r24
 1fc:	80 e0       	ldi	r24, 0x00	; 0
 1fe:	90 e0       	ldi	r25, 0x00	; 0
 200:	0e 94 df 02 	call	0x5be	; 0x5be <__floatunsisf>
 204:	27 e1       	ldi	r18, 0x17	; 23
 206:	37 eb       	ldi	r19, 0xB7	; 183
 208:	41 ed       	ldi	r20, 0xD1	; 209
 20a:	58 e3       	ldi	r21, 0x38	; 56
 20c:	0e 94 6d 03 	call	0x6da	; 0x6da <__mulsf3>
	}
 210:	08 95       	ret

00000212 <_ZN8ATM90E2615GetExportEnergyEv>:

	double ATM90E26::GetExportEnergy(){
		//Register is cleared after reading
		unsigned short eenergy=CommEnergyIC(1,ANenergy,0xFFFF);
 212:	2f ef       	ldi	r18, 0xFF	; 255
 214:	3f ef       	ldi	r19, 0xFF	; 255
 216:	41 e4       	ldi	r20, 0x41	; 65
 218:	61 e0       	ldi	r22, 0x01	; 1
 21a:	0e 94 54 00 	call	0xa8	; 0xa8 <_ZN8ATM90E2612CommEnergyICEhht>
		return (double)eenergy*0.0001; //returns kWh if PL constant set to 1000imp/kWh
 21e:	bc 01       	movw	r22, r24
 220:	80 e0       	ldi	r24, 0x00	; 0
 222:	90 e0       	ldi	r25, 0x00	; 0
 224:	0e 94 df 02 	call	0x5be	; 0x5be <__floatunsisf>
 228:	27 e1       	ldi	r18, 0x17	; 23
 22a:	37 eb       	ldi	r19, 0xB7	; 183
 22c:	41 ed       	ldi	r20, 0xD1	; 209
 22e:	58 e3       	ldi	r21, 0x38	; 56
 230:	0e 94 6d 03 	call	0x6da	; 0x6da <__mulsf3>
	}
 234:	08 95       	ret

00000236 <_ZN8ATM90E2612GetSysStatusEv>:

	unsigned short ATM90E26::GetSysStatus(){
		return CommEnergyIC(1,SysStatus,0xFFFF);
 236:	2f ef       	ldi	r18, 0xFF	; 255
 238:	3f ef       	ldi	r19, 0xFF	; 255
 23a:	41 e0       	ldi	r20, 0x01	; 1
 23c:	61 e0       	ldi	r22, 0x01	; 1
 23e:	0e 94 54 00 	call	0xa8	; 0xa8 <_ZN8ATM90E2612CommEnergyICEhht>
	}
 242:	08 95       	ret

00000244 <_ZN8ATM90E2612InitEnergyICEv>:


	void ATM90E26::InitEnergyIC(){
 244:	cf 93       	push	r28
 246:	df 93       	push	r29
 248:	ec 01       	movw	r28, r24
		unsigned short systemstatus;
		
		DDRB =(1<<_cs);
 24a:	81 e0       	ldi	r24, 0x01	; 1
 24c:	90 e0       	ldi	r25, 0x00	; 0
 24e:	08 80       	ld	r0, Y
 250:	02 c0       	rjmp	.+4      	; 0x256 <_ZN8ATM90E2612InitEnergyICEv+0x12>
 252:	88 0f       	add	r24, r24
 254:	99 1f       	adc	r25, r25
 256:	0a 94       	dec	r0
 258:	e2 f7       	brpl	.-8      	; 0x252 <_ZN8ATM90E2612InitEnergyICEv+0xe>
 25a:	87 bb       	out	0x17, r24	; 23
		DDRD =(1<<PD0);
 25c:	81 e0       	ldi	r24, 0x01	; 1
 25e:	81 bb       	out	0x11, r24	; 17
		DDRD =(1<<PD1);
 260:	82 e0       	ldi	r24, 0x02	; 2
 262:	81 bb       	out	0x11, r24	; 17
		

		
		CommEnergyIC(0,SoftReset,0x789A); //Perform soft reset
 264:	2a e9       	ldi	r18, 0x9A	; 154
 266:	38 e7       	ldi	r19, 0x78	; 120
 268:	40 e0       	ldi	r20, 0x00	; 0
 26a:	60 e0       	ldi	r22, 0x00	; 0
 26c:	ce 01       	movw	r24, r28
 26e:	0e 94 54 00 	call	0xa8	; 0xa8 <_ZN8ATM90E2612CommEnergyICEhht>
		CommEnergyIC(0,FuncEn,0x0030); //Voltage sag irq=1, report on warnout pin=1, energy dir change irq=0
 272:	20 e3       	ldi	r18, 0x30	; 48
 274:	30 e0       	ldi	r19, 0x00	; 0
 276:	42 e0       	ldi	r20, 0x02	; 2
 278:	60 e0       	ldi	r22, 0x00	; 0
 27a:	ce 01       	movw	r24, r28
 27c:	0e 94 54 00 	call	0xa8	; 0xa8 <_ZN8ATM90E2612CommEnergyICEhht>
		CommEnergyIC(0,SagTh,0x1F2F); //Voltage sag threshold
 280:	2f e2       	ldi	r18, 0x2F	; 47
 282:	3f e1       	ldi	r19, 0x1F	; 31
 284:	43 e0       	ldi	r20, 0x03	; 3
 286:	60 e0       	ldi	r22, 0x00	; 0
 288:	ce 01       	movw	r24, r28
 28a:	0e 94 54 00 	call	0xa8	; 0xa8 <_ZN8ATM90E2612CommEnergyICEhht>
		

		//Set metering calibration values
		CommEnergyIC(0,CalStart,0x5678); //Metering calibration startup command. Register 21 to 2B need to be set
 28e:	28 e7       	ldi	r18, 0x78	; 120
 290:	36 e5       	ldi	r19, 0x56	; 86
 292:	40 e2       	ldi	r20, 0x20	; 32
 294:	60 e0       	ldi	r22, 0x00	; 0
 296:	ce 01       	movw	r24, r28
 298:	0e 94 54 00 	call	0xa8	; 0xa8 <_ZN8ATM90E2612CommEnergyICEhht>
		CommEnergyIC(0,PLconstH,0x00B9); //PL Constant MSB
 29c:	29 eb       	ldi	r18, 0xB9	; 185
 29e:	30 e0       	ldi	r19, 0x00	; 0
 2a0:	41 e2       	ldi	r20, 0x21	; 33
 2a2:	60 e0       	ldi	r22, 0x00	; 0
 2a4:	ce 01       	movw	r24, r28
 2a6:	0e 94 54 00 	call	0xa8	; 0xa8 <_ZN8ATM90E2612CommEnergyICEhht>
		CommEnergyIC(0,PLconstL,0xC1F3); //PL Constant LSB
 2aa:	23 ef       	ldi	r18, 0xF3	; 243
 2ac:	31 ec       	ldi	r19, 0xC1	; 193
 2ae:	42 e2       	ldi	r20, 0x22	; 34
 2b0:	60 e0       	ldi	r22, 0x00	; 0
 2b2:	ce 01       	movw	r24, r28
 2b4:	0e 94 54 00 	call	0xa8	; 0xa8 <_ZN8ATM90E2612CommEnergyICEhht>
		CommEnergyIC(0,Lgain,_lgain);   //Line calibration gain
 2b8:	2a 81       	ldd	r18, Y+2	; 0x02
 2ba:	3b 81       	ldd	r19, Y+3	; 0x03
 2bc:	43 e2       	ldi	r20, 0x23	; 35
 2be:	60 e0       	ldi	r22, 0x00	; 0
 2c0:	ce 01       	movw	r24, r28
 2c2:	0e 94 54 00 	call	0xa8	; 0xa8 <_ZN8ATM90E2612CommEnergyICEhht>
		CommEnergyIC(0,Lphi,0x0000); //Line calibration angle
 2c6:	20 e0       	ldi	r18, 0x00	; 0
 2c8:	30 e0       	ldi	r19, 0x00	; 0
 2ca:	44 e2       	ldi	r20, 0x24	; 36
 2cc:	60 e0       	ldi	r22, 0x00	; 0
 2ce:	ce 01       	movw	r24, r28
 2d0:	0e 94 54 00 	call	0xa8	; 0xa8 <_ZN8ATM90E2612CommEnergyICEhht>
		CommEnergyIC(0,PStartTh,0x08BD); //Active Startup Power Threshold
 2d4:	2d eb       	ldi	r18, 0xBD	; 189
 2d6:	38 e0       	ldi	r19, 0x08	; 8
 2d8:	47 e2       	ldi	r20, 0x27	; 39
 2da:	60 e0       	ldi	r22, 0x00	; 0
 2dc:	ce 01       	movw	r24, r28
 2de:	0e 94 54 00 	call	0xa8	; 0xa8 <_ZN8ATM90E2612CommEnergyICEhht>
		CommEnergyIC(0,PNolTh,0x0000); //Active No-Load Power Threshold
 2e2:	20 e0       	ldi	r18, 0x00	; 0
 2e4:	30 e0       	ldi	r19, 0x00	; 0
 2e6:	48 e2       	ldi	r20, 0x28	; 40
 2e8:	60 e0       	ldi	r22, 0x00	; 0
 2ea:	ce 01       	movw	r24, r28
 2ec:	0e 94 54 00 	call	0xa8	; 0xa8 <_ZN8ATM90E2612CommEnergyICEhht>
		CommEnergyIC(0,QStartTh,0x0AEC); //Reactive Startup Power Threshold
 2f0:	2c ee       	ldi	r18, 0xEC	; 236
 2f2:	3a e0       	ldi	r19, 0x0A	; 10
 2f4:	49 e2       	ldi	r20, 0x29	; 41
 2f6:	60 e0       	ldi	r22, 0x00	; 0
 2f8:	ce 01       	movw	r24, r28
 2fa:	0e 94 54 00 	call	0xa8	; 0xa8 <_ZN8ATM90E2612CommEnergyICEhht>
		CommEnergyIC(0,QNolTh,0x0000); //Reactive No-Load Power Threshold
 2fe:	20 e0       	ldi	r18, 0x00	; 0
 300:	30 e0       	ldi	r19, 0x00	; 0
 302:	4a e2       	ldi	r20, 0x2A	; 42
 304:	60 e0       	ldi	r22, 0x00	; 0
 306:	ce 01       	movw	r24, r28
 308:	0e 94 54 00 	call	0xa8	; 0xa8 <_ZN8ATM90E2612CommEnergyICEhht>
		CommEnergyIC(0,MMode,0x9422); //Metering Mode Configuration. All defaults. refer from pg 31 of datasheet.
 30c:	22 e2       	ldi	r18, 0x22	; 34
 30e:	34 e9       	ldi	r19, 0x94	; 148
 310:	4b e2       	ldi	r20, 0x2B	; 43
 312:	60 e0       	ldi	r22, 0x00	; 0
 314:	ce 01       	movw	r24, r28
 316:	0e 94 54 00 	call	0xa8	; 0xa8 <_ZN8ATM90E2612CommEnergyICEhht>
		CommEnergyIC(0,CSOne,_crc1); //Write CSOne, as self calculated
 31a:	28 85       	ldd	r18, Y+8	; 0x08
 31c:	39 85       	ldd	r19, Y+9	; 0x09
 31e:	4c e2       	ldi	r20, 0x2C	; 44
 320:	60 e0       	ldi	r22, 0x00	; 0
 322:	ce 01       	movw	r24, r28
 324:	0e 94 54 00 	call	0xa8	; 0xa8 <_ZN8ATM90E2612CommEnergyICEhht>
		

		//Set measurement calibration values
		CommEnergyIC(0,AdjStart,0x5678); //Measurement calibration startup command, registers 31-3A
 328:	28 e7       	ldi	r18, 0x78	; 120
 32a:	36 e5       	ldi	r19, 0x56	; 86
 32c:	40 e3       	ldi	r20, 0x30	; 48
 32e:	60 e0       	ldi	r22, 0x00	; 0
 330:	ce 01       	movw	r24, r28
 332:	0e 94 54 00 	call	0xa8	; 0xa8 <_ZN8ATM90E2612CommEnergyICEhht>
		CommEnergyIC(0,Ugain,_ugain);    //Voltage rms gain
 336:	2c 81       	ldd	r18, Y+4	; 0x04
 338:	3d 81       	ldd	r19, Y+5	; 0x05
 33a:	41 e3       	ldi	r20, 0x31	; 49
 33c:	60 e0       	ldi	r22, 0x00	; 0
 33e:	ce 01       	movw	r24, r28
 340:	0e 94 54 00 	call	0xa8	; 0xa8 <_ZN8ATM90E2612CommEnergyICEhht>
		CommEnergyIC(0,IgainL,_igain);   //L line current gain
 344:	2e 81       	ldd	r18, Y+6	; 0x06
 346:	3f 81       	ldd	r19, Y+7	; 0x07
 348:	42 e3       	ldi	r20, 0x32	; 50
 34a:	60 e0       	ldi	r22, 0x00	; 0
 34c:	ce 01       	movw	r24, r28
 34e:	0e 94 54 00 	call	0xa8	; 0xa8 <_ZN8ATM90E2612CommEnergyICEhht>
		CommEnergyIC(0,Uoffset,0x0000);  //Voltage offset
 352:	20 e0       	ldi	r18, 0x00	; 0
 354:	30 e0       	ldi	r19, 0x00	; 0
 356:	44 e3       	ldi	r20, 0x34	; 52
 358:	60 e0       	ldi	r22, 0x00	; 0
 35a:	ce 01       	movw	r24, r28
 35c:	0e 94 54 00 	call	0xa8	; 0xa8 <_ZN8ATM90E2612CommEnergyICEhht>
		CommEnergyIC(0,IoffsetL,0x0000); //L line current offset
 360:	20 e0       	ldi	r18, 0x00	; 0
 362:	30 e0       	ldi	r19, 0x00	; 0
 364:	45 e3       	ldi	r20, 0x35	; 53
 366:	60 e0       	ldi	r22, 0x00	; 0
 368:	ce 01       	movw	r24, r28
 36a:	0e 94 54 00 	call	0xa8	; 0xa8 <_ZN8ATM90E2612CommEnergyICEhht>
		CommEnergyIC(0,PoffsetL,0x0000); //L line active power offset
 36e:	20 e0       	ldi	r18, 0x00	; 0
 370:	30 e0       	ldi	r19, 0x00	; 0
 372:	47 e3       	ldi	r20, 0x37	; 55
 374:	60 e0       	ldi	r22, 0x00	; 0
 376:	ce 01       	movw	r24, r28
 378:	0e 94 54 00 	call	0xa8	; 0xa8 <_ZN8ATM90E2612CommEnergyICEhht>
		CommEnergyIC(0,QoffsetL,0x0000); //L line reactive power offset
 37c:	20 e0       	ldi	r18, 0x00	; 0
 37e:	30 e0       	ldi	r19, 0x00	; 0
 380:	48 e3       	ldi	r20, 0x38	; 56
 382:	60 e0       	ldi	r22, 0x00	; 0
 384:	ce 01       	movw	r24, r28
 386:	0e 94 54 00 	call	0xa8	; 0xa8 <_ZN8ATM90E2612CommEnergyICEhht>
		CommEnergyIC(0,CSTwo,_crc2); //Write CSTwo, as self calculated
 38a:	2a 85       	ldd	r18, Y+10	; 0x0a
 38c:	3b 85       	ldd	r19, Y+11	; 0x0b
 38e:	4b e3       	ldi	r20, 0x3B	; 59
 390:	60 e0       	ldi	r22, 0x00	; 0
 392:	ce 01       	movw	r24, r28
 394:	0e 94 54 00 	call	0xa8	; 0xa8 <_ZN8ATM90E2612CommEnergyICEhht>
		
		CommEnergyIC(0,CalStart,0x8765); //Checks correctness of 21-2B registers and starts normal metering if ok
 398:	25 e6       	ldi	r18, 0x65	; 101
 39a:	37 e8       	ldi	r19, 0x87	; 135
 39c:	40 e2       	ldi	r20, 0x20	; 32
 39e:	60 e0       	ldi	r22, 0x00	; 0
 3a0:	ce 01       	movw	r24, r28
 3a2:	0e 94 54 00 	call	0xa8	; 0xa8 <_ZN8ATM90E2612CommEnergyICEhht>
		CommEnergyIC(0,AdjStart,0x8765); //Checks correctness of 31-3A registers and starts normal measurement  if ok
 3a6:	25 e6       	ldi	r18, 0x65	; 101
 3a8:	37 e8       	ldi	r19, 0x87	; 135
 3aa:	40 e3       	ldi	r20, 0x30	; 48
 3ac:	60 e0       	ldi	r22, 0x00	; 0
 3ae:	ce 01       	movw	r24, r28
 3b0:	0e 94 54 00 	call	0xa8	; 0xa8 <_ZN8ATM90E2612CommEnergyICEhht>

		systemstatus = GetSysStatus();
 3b4:	ce 01       	movw	r24, r28
 3b6:	0e 94 1b 01 	call	0x236	; 0x236 <_ZN8ATM90E2612GetSysStatusEv>
		
		if (systemstatus&0xC000){
 3ba:	9c 01       	movw	r18, r24
 3bc:	22 27       	eor	r18, r18
 3be:	30 7c       	andi	r19, 0xC0	; 192
 3c0:	23 2b       	or	r18, r19
 3c2:	11 f0       	breq	.+4      	; 0x3c8 <_ZN8ATM90E2612InitEnergyICEv+0x184>
			//checksum 1 error
			PORTD =(1<<PD0);//PD0 light will be ON when checksum1 error occur
 3c4:	21 e0       	ldi	r18, 0x01	; 1
 3c6:	22 bb       	out	0x12, r18	; 18
		}
		if (systemstatus&0x3000){
 3c8:	88 27       	eor	r24, r24
 3ca:	90 73       	andi	r25, 0x30	; 48
 3cc:	89 2b       	or	r24, r25
 3ce:	11 f0       	breq	.+4      	; 0x3d4 <_ZN8ATM90E2612InitEnergyICEv+0x190>
			//checksum 2 error
			PORTD=(1<<PD1);//PD1 light will be ON when checksum2 error occurs
 3d0:	82 e0       	ldi	r24, 0x02	; 2
 3d2:	82 bb       	out	0x12, r24	; 18
		}
	}
 3d4:	df 91       	pop	r29
 3d6:	cf 91       	pop	r28
 3d8:	08 95       	ret

000003da <main>:


int main(void)
{
 3da:	cf 93       	push	r28
 3dc:	df 93       	push	r29
 3de:	cd b7       	in	r28, 0x3d	; 61
 3e0:	de b7       	in	r29, 0x3e	; 62
 3e2:	2c 97       	sbiw	r28, 0x0c	; 12
 3e4:	0f b6       	in	r0, 0x3f	; 63
 3e6:	f8 94       	cli
 3e8:	de bf       	out	0x3e, r29	; 62
 3ea:	0f be       	out	0x3f, r0	; 63
 3ec:	cd bf       	out	0x3d, r28	; 61
	unsigned short _crc2;
};

ATM90E26::ATM90E26(int pin)
{
	_cs = pin;
 3ee:	84 e0       	ldi	r24, 0x04	; 4
 3f0:	90 e0       	ldi	r25, 0x00	; 0
 3f2:	9a 83       	std	Y+2, r25	; 0x02
 3f4:	89 83       	std	Y+1, r24	; 0x01
	_lgain = 0x1D39;
 3f6:	89 e3       	ldi	r24, 0x39	; 57
 3f8:	9d e1       	ldi	r25, 0x1D	; 29
 3fa:	9c 83       	std	Y+4, r25	; 0x04
 3fc:	8b 83       	std	Y+3, r24	; 0x03
	_ugain = 0xD464;
 3fe:	84 e6       	ldi	r24, 0x64	; 100
 400:	94 ed       	ldi	r25, 0xD4	; 212
 402:	9e 83       	std	Y+6, r25	; 0x06
 404:	8d 83       	std	Y+5, r24	; 0x05
	_igain = 0x6E49;
 406:	89 e4       	ldi	r24, 0x49	; 73
 408:	9e e6       	ldi	r25, 0x6E	; 110
 40a:	98 87       	std	Y+8, r25	; 0x08
 40c:	8f 83       	std	Y+7, r24	; 0x07
	_crc1 = 0x4A34;
 40e:	84 e3       	ldi	r24, 0x34	; 52
 410:	9a e4       	ldi	r25, 0x4A	; 74
 412:	9a 87       	std	Y+10, r25	; 0x0a
 414:	89 87       	std	Y+9, r24	; 0x09
	_crc2 = 0xD294;
 416:	84 e9       	ldi	r24, 0x94	; 148
 418:	92 ed       	ldi	r25, 0xD2	; 210
 41a:	9c 87       	std	Y+12, r25	; 0x0c
 41c:	8b 87       	std	Y+11, r24	; 0x0b


int main(void)
{
	ATM90E26 m;
	DDRD =(0<<PD2);//input from ATM90E26(pin 17) warn out pin for voltage sag detection
 41e:	11 ba       	out	0x11, r1	; 17
	DDRD =(1<<PD4);//led output signal for voltage sag detection
 420:	80 e1       	ldi	r24, 0x10	; 16
 422:	81 bb       	out	0x11, r24	; 17
	m.InitEnergyIC(); //calibration begins
 424:	ce 01       	movw	r24, r28
 426:	01 96       	adiw	r24, 0x01	; 1
 428:	0e 94 22 01 	call	0x244	; 0x244 <_ZN8ATM90E2612InitEnergyICEv>
			m.GetExportEnergy();		//total energy consumed by EV vehicle by charging
			_delay_ms(500);
		}
	else
	{
		PORTD=(1<<PD4);       //warning light for voltage sag detection 
 42c:	10 e1       	ldi	r17, 0x10	; 16
	DDRD =(1<<PD4);//led output signal for voltage sag detection
	m.InitEnergyIC(); //calibration begins
	
    while (1)
    {
		if(!(PINC & (1<<PC3))) //checking whether voltage sag is detected
 42e:	9b 99       	sbic	0x13, 3	; 19
 430:	52 c0       	rjmp	.+164    	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
		{
			printf("Sys Status:\n");
 432:	80 e6       	ldi	r24, 0x60	; 96
 434:	90 e0       	ldi	r25, 0x00	; 0
 436:	0e 94 da 03 	call	0x7b4	; 0x7b4 <puts>
			m.GetSysStatus();          //return system status
 43a:	ce 01       	movw	r24, r28
 43c:	01 96       	adiw	r24, 0x01	; 1
 43e:	0e 94 1b 01 	call	0x236	; 0x236 <_ZN8ATM90E2612GetSysStatusEv>
			printf("Meter Status:\n");
 442:	8c e6       	ldi	r24, 0x6C	; 108
 444:	90 e0       	ldi	r25, 0x00	; 0
 446:	0e 94 da 03 	call	0x7b4	; 0x7b4 <puts>
			m.GetMeterStatus();			//return meter status
 44a:	ce 01       	movw	r24, r28
 44c:	01 96       	adiw	r24, 0x01	; 1
 44e:	0e 94 a9 00 	call	0x152	; 0x152 <_ZN8ATM90E2614GetMeterStatusEv>
			printf("Voltage:\n");
 452:	8a e7       	ldi	r24, 0x7A	; 122
 454:	90 e0       	ldi	r25, 0x00	; 0
 456:	0e 94 da 03 	call	0x7b4	; 0x7b4 <puts>
			m.GetLineVoltage();			// voltage
 45a:	ce 01       	movw	r24, r28
 45c:	01 96       	adiw	r24, 0x01	; 1
 45e:	0e 94 97 00 	call	0x12e	; 0x12e <_ZN8ATM90E2614GetLineVoltageEv>
			printf("Current:\n");
 462:	83 e8       	ldi	r24, 0x83	; 131
 464:	90 e0       	ldi	r25, 0x00	; 0
 466:	0e 94 da 03 	call	0x7b4	; 0x7b4 <puts>
			m.GetLineCurrent();			// current
 46a:	ce 01       	movw	r24, r28
 46c:	01 96       	adiw	r24, 0x01	; 1
 46e:	0e 94 b0 00 	call	0x160	; 0x160 <_ZN8ATM90E2614GetLineCurrentEv>
			printf("Active power:\n");
 472:	8c e8       	ldi	r24, 0x8C	; 140
 474:	90 e0       	ldi	r25, 0x00	; 0
 476:	0e 94 da 03 	call	0x7b4	; 0x7b4 <puts>
			m.GetActivePower();         //active power
 47a:	ce 01       	movw	r24, r28
 47c:	01 96       	adiw	r24, 0x01	; 1
 47e:	0e 94 c2 00 	call	0x184	; 0x184 <_ZN8ATM90E2614GetActivePowerEv>
			printf("Reactive power:\n"); //reactive power
 482:	8a e9       	ldi	r24, 0x9A	; 154
 484:	90 e0       	ldi	r25, 0x00	; 0
 486:	0e 94 da 03 	call	0x7b4	; 0x7b4 <puts>
			m.GetReactivePower();
 48a:	ce 01       	movw	r24, r28
 48c:	01 96       	adiw	r24, 0x01	; 1
 48e:	0e 94 cf 00 	call	0x19e	; 0x19e <_ZN8ATM90E2616GetReactivePowerEv>
			printf("p.f.:\n");			//power factor
 492:	8a ea       	ldi	r24, 0xAA	; 170
 494:	90 e0       	ldi	r25, 0x00	; 0
 496:	0e 94 da 03 	call	0x7b4	; 0x7b4 <puts>
			m.GetPowerFactor();
 49a:	ce 01       	movw	r24, r28
 49c:	01 96       	adiw	r24, 0x01	; 1
 49e:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <_ZN8ATM90E2614GetPowerFactorEv>
			printf("Energy consumed by EV station:\n");
 4a2:	80 eb       	ldi	r24, 0xB0	; 176
 4a4:	90 e0       	ldi	r25, 0x00	; 0
 4a6:	0e 94 da 03 	call	0x7b4	; 0x7b4 <puts>
			m.GetImportEnergy();		//total energy consumed by Ev station
 4aa:	ce 01       	movw	r24, r28
 4ac:	01 96       	adiw	r24, 0x01	; 1
 4ae:	0e 94 f7 00 	call	0x1ee	; 0x1ee <_ZN8ATM90E2615GetImportEnergyEv>
			printf("Energy consumed by EV vehicle:\n");
 4b2:	8f ec       	ldi	r24, 0xCF	; 207
 4b4:	90 e0       	ldi	r25, 0x00	; 0
 4b6:	0e 94 da 03 	call	0x7b4	; 0x7b4 <puts>
			m.GetExportEnergy();		//total energy consumed by EV vehicle by charging
 4ba:	ce 01       	movw	r24, r28
 4bc:	01 96       	adiw	r24, 0x01	; 1
 4be:	0e 94 09 01 	call	0x212	; 0x212 <_ZN8ATM90E2615GetExportEnergyEv>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 4c2:	2f ef       	ldi	r18, 0xFF	; 255
 4c4:	89 e6       	ldi	r24, 0x69	; 105
 4c6:	98 e1       	ldi	r25, 0x18	; 24
 4c8:	21 50       	subi	r18, 0x01	; 1
 4ca:	80 40       	sbci	r24, 0x00	; 0
 4cc:	90 40       	sbci	r25, 0x00	; 0
 4ce:	e1 f7       	brne	.-8      	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 4d0:	00 c0       	rjmp	.+0      	; 0x4d2 <__LOCK_REGION_LENGTH__+0xd2>
 4d2:	00 00       	nop
 4d4:	ac cf       	rjmp	.-168    	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
			_delay_ms(500);
		}
	else
	{
		PORTD=(1<<PD4);       //warning light for voltage sag detection 
 4d6:	12 bb       	out	0x12, r17	; 18
 4d8:	aa cf       	rjmp	.-172    	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>

000004da <__divsf3>:
 4da:	0e 94 81 02 	call	0x502	; 0x502 <__divsf3x>
 4de:	0c 94 33 03 	jmp	0x666	; 0x666 <__fp_round>
 4e2:	0e 94 2c 03 	call	0x658	; 0x658 <__fp_pscB>
 4e6:	58 f0       	brcs	.+22     	; 0x4fe <__divsf3+0x24>
 4e8:	0e 94 25 03 	call	0x64a	; 0x64a <__fp_pscA>
 4ec:	40 f0       	brcs	.+16     	; 0x4fe <__divsf3+0x24>
 4ee:	29 f4       	brne	.+10     	; 0x4fa <__divsf3+0x20>
 4f0:	5f 3f       	cpi	r21, 0xFF	; 255
 4f2:	29 f0       	breq	.+10     	; 0x4fe <__divsf3+0x24>
 4f4:	0c 94 1c 03 	jmp	0x638	; 0x638 <__fp_inf>
 4f8:	51 11       	cpse	r21, r1
 4fa:	0c 94 67 03 	jmp	0x6ce	; 0x6ce <__fp_szero>
 4fe:	0c 94 22 03 	jmp	0x644	; 0x644 <__fp_nan>

00000502 <__divsf3x>:
 502:	0e 94 44 03 	call	0x688	; 0x688 <__fp_split3>
 506:	68 f3       	brcs	.-38     	; 0x4e2 <__divsf3+0x8>

00000508 <__divsf3_pse>:
 508:	99 23       	and	r25, r25
 50a:	b1 f3       	breq	.-20     	; 0x4f8 <__divsf3+0x1e>
 50c:	55 23       	and	r21, r21
 50e:	91 f3       	breq	.-28     	; 0x4f4 <__divsf3+0x1a>
 510:	95 1b       	sub	r25, r21
 512:	55 0b       	sbc	r21, r21
 514:	bb 27       	eor	r27, r27
 516:	aa 27       	eor	r26, r26
 518:	62 17       	cp	r22, r18
 51a:	73 07       	cpc	r23, r19
 51c:	84 07       	cpc	r24, r20
 51e:	38 f0       	brcs	.+14     	; 0x52e <__divsf3_pse+0x26>
 520:	9f 5f       	subi	r25, 0xFF	; 255
 522:	5f 4f       	sbci	r21, 0xFF	; 255
 524:	22 0f       	add	r18, r18
 526:	33 1f       	adc	r19, r19
 528:	44 1f       	adc	r20, r20
 52a:	aa 1f       	adc	r26, r26
 52c:	a9 f3       	breq	.-22     	; 0x518 <__divsf3_pse+0x10>
 52e:	35 d0       	rcall	.+106    	; 0x59a <__divsf3_pse+0x92>
 530:	0e 2e       	mov	r0, r30
 532:	3a f0       	brmi	.+14     	; 0x542 <__divsf3_pse+0x3a>
 534:	e0 e8       	ldi	r30, 0x80	; 128
 536:	32 d0       	rcall	.+100    	; 0x59c <__divsf3_pse+0x94>
 538:	91 50       	subi	r25, 0x01	; 1
 53a:	50 40       	sbci	r21, 0x00	; 0
 53c:	e6 95       	lsr	r30
 53e:	00 1c       	adc	r0, r0
 540:	ca f7       	brpl	.-14     	; 0x534 <__divsf3_pse+0x2c>
 542:	2b d0       	rcall	.+86     	; 0x59a <__divsf3_pse+0x92>
 544:	fe 2f       	mov	r31, r30
 546:	29 d0       	rcall	.+82     	; 0x59a <__divsf3_pse+0x92>
 548:	66 0f       	add	r22, r22
 54a:	77 1f       	adc	r23, r23
 54c:	88 1f       	adc	r24, r24
 54e:	bb 1f       	adc	r27, r27
 550:	26 17       	cp	r18, r22
 552:	37 07       	cpc	r19, r23
 554:	48 07       	cpc	r20, r24
 556:	ab 07       	cpc	r26, r27
 558:	b0 e8       	ldi	r27, 0x80	; 128
 55a:	09 f0       	breq	.+2      	; 0x55e <__divsf3_pse+0x56>
 55c:	bb 0b       	sbc	r27, r27
 55e:	80 2d       	mov	r24, r0
 560:	bf 01       	movw	r22, r30
 562:	ff 27       	eor	r31, r31
 564:	93 58       	subi	r25, 0x83	; 131
 566:	5f 4f       	sbci	r21, 0xFF	; 255
 568:	3a f0       	brmi	.+14     	; 0x578 <__divsf3_pse+0x70>
 56a:	9e 3f       	cpi	r25, 0xFE	; 254
 56c:	51 05       	cpc	r21, r1
 56e:	78 f0       	brcs	.+30     	; 0x58e <__divsf3_pse+0x86>
 570:	0c 94 1c 03 	jmp	0x638	; 0x638 <__fp_inf>
 574:	0c 94 67 03 	jmp	0x6ce	; 0x6ce <__fp_szero>
 578:	5f 3f       	cpi	r21, 0xFF	; 255
 57a:	e4 f3       	brlt	.-8      	; 0x574 <__divsf3_pse+0x6c>
 57c:	98 3e       	cpi	r25, 0xE8	; 232
 57e:	d4 f3       	brlt	.-12     	; 0x574 <__divsf3_pse+0x6c>
 580:	86 95       	lsr	r24
 582:	77 95       	ror	r23
 584:	67 95       	ror	r22
 586:	b7 95       	ror	r27
 588:	f7 95       	ror	r31
 58a:	9f 5f       	subi	r25, 0xFF	; 255
 58c:	c9 f7       	brne	.-14     	; 0x580 <__divsf3_pse+0x78>
 58e:	88 0f       	add	r24, r24
 590:	91 1d       	adc	r25, r1
 592:	96 95       	lsr	r25
 594:	87 95       	ror	r24
 596:	97 f9       	bld	r25, 7
 598:	08 95       	ret
 59a:	e1 e0       	ldi	r30, 0x01	; 1
 59c:	66 0f       	add	r22, r22
 59e:	77 1f       	adc	r23, r23
 5a0:	88 1f       	adc	r24, r24
 5a2:	bb 1f       	adc	r27, r27
 5a4:	62 17       	cp	r22, r18
 5a6:	73 07       	cpc	r23, r19
 5a8:	84 07       	cpc	r24, r20
 5aa:	ba 07       	cpc	r27, r26
 5ac:	20 f0       	brcs	.+8      	; 0x5b6 <__divsf3_pse+0xae>
 5ae:	62 1b       	sub	r22, r18
 5b0:	73 0b       	sbc	r23, r19
 5b2:	84 0b       	sbc	r24, r20
 5b4:	ba 0b       	sbc	r27, r26
 5b6:	ee 1f       	adc	r30, r30
 5b8:	88 f7       	brcc	.-30     	; 0x59c <__divsf3_pse+0x94>
 5ba:	e0 95       	com	r30
 5bc:	08 95       	ret

000005be <__floatunsisf>:
 5be:	e8 94       	clt
 5c0:	09 c0       	rjmp	.+18     	; 0x5d4 <__floatsisf+0x12>

000005c2 <__floatsisf>:
 5c2:	97 fb       	bst	r25, 7
 5c4:	3e f4       	brtc	.+14     	; 0x5d4 <__floatsisf+0x12>
 5c6:	90 95       	com	r25
 5c8:	80 95       	com	r24
 5ca:	70 95       	com	r23
 5cc:	61 95       	neg	r22
 5ce:	7f 4f       	sbci	r23, 0xFF	; 255
 5d0:	8f 4f       	sbci	r24, 0xFF	; 255
 5d2:	9f 4f       	sbci	r25, 0xFF	; 255
 5d4:	99 23       	and	r25, r25
 5d6:	a9 f0       	breq	.+42     	; 0x602 <__floatsisf+0x40>
 5d8:	f9 2f       	mov	r31, r25
 5da:	96 e9       	ldi	r25, 0x96	; 150
 5dc:	bb 27       	eor	r27, r27
 5de:	93 95       	inc	r25
 5e0:	f6 95       	lsr	r31
 5e2:	87 95       	ror	r24
 5e4:	77 95       	ror	r23
 5e6:	67 95       	ror	r22
 5e8:	b7 95       	ror	r27
 5ea:	f1 11       	cpse	r31, r1
 5ec:	f8 cf       	rjmp	.-16     	; 0x5de <__floatsisf+0x1c>
 5ee:	fa f4       	brpl	.+62     	; 0x62e <__floatsisf+0x6c>
 5f0:	bb 0f       	add	r27, r27
 5f2:	11 f4       	brne	.+4      	; 0x5f8 <__floatsisf+0x36>
 5f4:	60 ff       	sbrs	r22, 0
 5f6:	1b c0       	rjmp	.+54     	; 0x62e <__floatsisf+0x6c>
 5f8:	6f 5f       	subi	r22, 0xFF	; 255
 5fa:	7f 4f       	sbci	r23, 0xFF	; 255
 5fc:	8f 4f       	sbci	r24, 0xFF	; 255
 5fe:	9f 4f       	sbci	r25, 0xFF	; 255
 600:	16 c0       	rjmp	.+44     	; 0x62e <__floatsisf+0x6c>
 602:	88 23       	and	r24, r24
 604:	11 f0       	breq	.+4      	; 0x60a <__floatsisf+0x48>
 606:	96 e9       	ldi	r25, 0x96	; 150
 608:	11 c0       	rjmp	.+34     	; 0x62c <__floatsisf+0x6a>
 60a:	77 23       	and	r23, r23
 60c:	21 f0       	breq	.+8      	; 0x616 <__floatsisf+0x54>
 60e:	9e e8       	ldi	r25, 0x8E	; 142
 610:	87 2f       	mov	r24, r23
 612:	76 2f       	mov	r23, r22
 614:	05 c0       	rjmp	.+10     	; 0x620 <__floatsisf+0x5e>
 616:	66 23       	and	r22, r22
 618:	71 f0       	breq	.+28     	; 0x636 <__floatsisf+0x74>
 61a:	96 e8       	ldi	r25, 0x86	; 134
 61c:	86 2f       	mov	r24, r22
 61e:	70 e0       	ldi	r23, 0x00	; 0
 620:	60 e0       	ldi	r22, 0x00	; 0
 622:	2a f0       	brmi	.+10     	; 0x62e <__floatsisf+0x6c>
 624:	9a 95       	dec	r25
 626:	66 0f       	add	r22, r22
 628:	77 1f       	adc	r23, r23
 62a:	88 1f       	adc	r24, r24
 62c:	da f7       	brpl	.-10     	; 0x624 <__floatsisf+0x62>
 62e:	88 0f       	add	r24, r24
 630:	96 95       	lsr	r25
 632:	87 95       	ror	r24
 634:	97 f9       	bld	r25, 7
 636:	08 95       	ret

00000638 <__fp_inf>:
 638:	97 f9       	bld	r25, 7
 63a:	9f 67       	ori	r25, 0x7F	; 127
 63c:	80 e8       	ldi	r24, 0x80	; 128
 63e:	70 e0       	ldi	r23, 0x00	; 0
 640:	60 e0       	ldi	r22, 0x00	; 0
 642:	08 95       	ret

00000644 <__fp_nan>:
 644:	9f ef       	ldi	r25, 0xFF	; 255
 646:	80 ec       	ldi	r24, 0xC0	; 192
 648:	08 95       	ret

0000064a <__fp_pscA>:
 64a:	00 24       	eor	r0, r0
 64c:	0a 94       	dec	r0
 64e:	16 16       	cp	r1, r22
 650:	17 06       	cpc	r1, r23
 652:	18 06       	cpc	r1, r24
 654:	09 06       	cpc	r0, r25
 656:	08 95       	ret

00000658 <__fp_pscB>:
 658:	00 24       	eor	r0, r0
 65a:	0a 94       	dec	r0
 65c:	12 16       	cp	r1, r18
 65e:	13 06       	cpc	r1, r19
 660:	14 06       	cpc	r1, r20
 662:	05 06       	cpc	r0, r21
 664:	08 95       	ret

00000666 <__fp_round>:
 666:	09 2e       	mov	r0, r25
 668:	03 94       	inc	r0
 66a:	00 0c       	add	r0, r0
 66c:	11 f4       	brne	.+4      	; 0x672 <__fp_round+0xc>
 66e:	88 23       	and	r24, r24
 670:	52 f0       	brmi	.+20     	; 0x686 <__fp_round+0x20>
 672:	bb 0f       	add	r27, r27
 674:	40 f4       	brcc	.+16     	; 0x686 <__fp_round+0x20>
 676:	bf 2b       	or	r27, r31
 678:	11 f4       	brne	.+4      	; 0x67e <__fp_round+0x18>
 67a:	60 ff       	sbrs	r22, 0
 67c:	04 c0       	rjmp	.+8      	; 0x686 <__fp_round+0x20>
 67e:	6f 5f       	subi	r22, 0xFF	; 255
 680:	7f 4f       	sbci	r23, 0xFF	; 255
 682:	8f 4f       	sbci	r24, 0xFF	; 255
 684:	9f 4f       	sbci	r25, 0xFF	; 255
 686:	08 95       	ret

00000688 <__fp_split3>:
 688:	57 fd       	sbrc	r21, 7
 68a:	90 58       	subi	r25, 0x80	; 128
 68c:	44 0f       	add	r20, r20
 68e:	55 1f       	adc	r21, r21
 690:	59 f0       	breq	.+22     	; 0x6a8 <__fp_splitA+0x10>
 692:	5f 3f       	cpi	r21, 0xFF	; 255
 694:	71 f0       	breq	.+28     	; 0x6b2 <__fp_splitA+0x1a>
 696:	47 95       	ror	r20

00000698 <__fp_splitA>:
 698:	88 0f       	add	r24, r24
 69a:	97 fb       	bst	r25, 7
 69c:	99 1f       	adc	r25, r25
 69e:	61 f0       	breq	.+24     	; 0x6b8 <__fp_splitA+0x20>
 6a0:	9f 3f       	cpi	r25, 0xFF	; 255
 6a2:	79 f0       	breq	.+30     	; 0x6c2 <__fp_splitA+0x2a>
 6a4:	87 95       	ror	r24
 6a6:	08 95       	ret
 6a8:	12 16       	cp	r1, r18
 6aa:	13 06       	cpc	r1, r19
 6ac:	14 06       	cpc	r1, r20
 6ae:	55 1f       	adc	r21, r21
 6b0:	f2 cf       	rjmp	.-28     	; 0x696 <__fp_split3+0xe>
 6b2:	46 95       	lsr	r20
 6b4:	f1 df       	rcall	.-30     	; 0x698 <__fp_splitA>
 6b6:	08 c0       	rjmp	.+16     	; 0x6c8 <__fp_splitA+0x30>
 6b8:	16 16       	cp	r1, r22
 6ba:	17 06       	cpc	r1, r23
 6bc:	18 06       	cpc	r1, r24
 6be:	99 1f       	adc	r25, r25
 6c0:	f1 cf       	rjmp	.-30     	; 0x6a4 <__fp_splitA+0xc>
 6c2:	86 95       	lsr	r24
 6c4:	71 05       	cpc	r23, r1
 6c6:	61 05       	cpc	r22, r1
 6c8:	08 94       	sec
 6ca:	08 95       	ret

000006cc <__fp_zero>:
 6cc:	e8 94       	clt

000006ce <__fp_szero>:
 6ce:	bb 27       	eor	r27, r27
 6d0:	66 27       	eor	r22, r22
 6d2:	77 27       	eor	r23, r23
 6d4:	cb 01       	movw	r24, r22
 6d6:	97 f9       	bld	r25, 7
 6d8:	08 95       	ret

000006da <__mulsf3>:
 6da:	0e 94 80 03 	call	0x700	; 0x700 <__mulsf3x>
 6de:	0c 94 33 03 	jmp	0x666	; 0x666 <__fp_round>
 6e2:	0e 94 25 03 	call	0x64a	; 0x64a <__fp_pscA>
 6e6:	38 f0       	brcs	.+14     	; 0x6f6 <__mulsf3+0x1c>
 6e8:	0e 94 2c 03 	call	0x658	; 0x658 <__fp_pscB>
 6ec:	20 f0       	brcs	.+8      	; 0x6f6 <__mulsf3+0x1c>
 6ee:	95 23       	and	r25, r21
 6f0:	11 f0       	breq	.+4      	; 0x6f6 <__mulsf3+0x1c>
 6f2:	0c 94 1c 03 	jmp	0x638	; 0x638 <__fp_inf>
 6f6:	0c 94 22 03 	jmp	0x644	; 0x644 <__fp_nan>
 6fa:	11 24       	eor	r1, r1
 6fc:	0c 94 67 03 	jmp	0x6ce	; 0x6ce <__fp_szero>

00000700 <__mulsf3x>:
 700:	0e 94 44 03 	call	0x688	; 0x688 <__fp_split3>
 704:	70 f3       	brcs	.-36     	; 0x6e2 <__mulsf3+0x8>

00000706 <__mulsf3_pse>:
 706:	95 9f       	mul	r25, r21
 708:	c1 f3       	breq	.-16     	; 0x6fa <__mulsf3+0x20>
 70a:	95 0f       	add	r25, r21
 70c:	50 e0       	ldi	r21, 0x00	; 0
 70e:	55 1f       	adc	r21, r21
 710:	62 9f       	mul	r22, r18
 712:	f0 01       	movw	r30, r0
 714:	72 9f       	mul	r23, r18
 716:	bb 27       	eor	r27, r27
 718:	f0 0d       	add	r31, r0
 71a:	b1 1d       	adc	r27, r1
 71c:	63 9f       	mul	r22, r19
 71e:	aa 27       	eor	r26, r26
 720:	f0 0d       	add	r31, r0
 722:	b1 1d       	adc	r27, r1
 724:	aa 1f       	adc	r26, r26
 726:	64 9f       	mul	r22, r20
 728:	66 27       	eor	r22, r22
 72a:	b0 0d       	add	r27, r0
 72c:	a1 1d       	adc	r26, r1
 72e:	66 1f       	adc	r22, r22
 730:	82 9f       	mul	r24, r18
 732:	22 27       	eor	r18, r18
 734:	b0 0d       	add	r27, r0
 736:	a1 1d       	adc	r26, r1
 738:	62 1f       	adc	r22, r18
 73a:	73 9f       	mul	r23, r19
 73c:	b0 0d       	add	r27, r0
 73e:	a1 1d       	adc	r26, r1
 740:	62 1f       	adc	r22, r18
 742:	83 9f       	mul	r24, r19
 744:	a0 0d       	add	r26, r0
 746:	61 1d       	adc	r22, r1
 748:	22 1f       	adc	r18, r18
 74a:	74 9f       	mul	r23, r20
 74c:	33 27       	eor	r19, r19
 74e:	a0 0d       	add	r26, r0
 750:	61 1d       	adc	r22, r1
 752:	23 1f       	adc	r18, r19
 754:	84 9f       	mul	r24, r20
 756:	60 0d       	add	r22, r0
 758:	21 1d       	adc	r18, r1
 75a:	82 2f       	mov	r24, r18
 75c:	76 2f       	mov	r23, r22
 75e:	6a 2f       	mov	r22, r26
 760:	11 24       	eor	r1, r1
 762:	9f 57       	subi	r25, 0x7F	; 127
 764:	50 40       	sbci	r21, 0x00	; 0
 766:	9a f0       	brmi	.+38     	; 0x78e <__mulsf3_pse+0x88>
 768:	f1 f0       	breq	.+60     	; 0x7a6 <__mulsf3_pse+0xa0>
 76a:	88 23       	and	r24, r24
 76c:	4a f0       	brmi	.+18     	; 0x780 <__mulsf3_pse+0x7a>
 76e:	ee 0f       	add	r30, r30
 770:	ff 1f       	adc	r31, r31
 772:	bb 1f       	adc	r27, r27
 774:	66 1f       	adc	r22, r22
 776:	77 1f       	adc	r23, r23
 778:	88 1f       	adc	r24, r24
 77a:	91 50       	subi	r25, 0x01	; 1
 77c:	50 40       	sbci	r21, 0x00	; 0
 77e:	a9 f7       	brne	.-22     	; 0x76a <__mulsf3_pse+0x64>
 780:	9e 3f       	cpi	r25, 0xFE	; 254
 782:	51 05       	cpc	r21, r1
 784:	80 f0       	brcs	.+32     	; 0x7a6 <__mulsf3_pse+0xa0>
 786:	0c 94 1c 03 	jmp	0x638	; 0x638 <__fp_inf>
 78a:	0c 94 67 03 	jmp	0x6ce	; 0x6ce <__fp_szero>
 78e:	5f 3f       	cpi	r21, 0xFF	; 255
 790:	e4 f3       	brlt	.-8      	; 0x78a <__mulsf3_pse+0x84>
 792:	98 3e       	cpi	r25, 0xE8	; 232
 794:	d4 f3       	brlt	.-12     	; 0x78a <__mulsf3_pse+0x84>
 796:	86 95       	lsr	r24
 798:	77 95       	ror	r23
 79a:	67 95       	ror	r22
 79c:	b7 95       	ror	r27
 79e:	f7 95       	ror	r31
 7a0:	e7 95       	ror	r30
 7a2:	9f 5f       	subi	r25, 0xFF	; 255
 7a4:	c1 f7       	brne	.-16     	; 0x796 <__mulsf3_pse+0x90>
 7a6:	fe 2b       	or	r31, r30
 7a8:	88 0f       	add	r24, r24
 7aa:	91 1d       	adc	r25, r1
 7ac:	96 95       	lsr	r25
 7ae:	87 95       	ror	r24
 7b0:	97 f9       	bld	r25, 7
 7b2:	08 95       	ret

000007b4 <puts>:
 7b4:	0f 93       	push	r16
 7b6:	1f 93       	push	r17
 7b8:	cf 93       	push	r28
 7ba:	df 93       	push	r29
 7bc:	e0 91 f0 00 	lds	r30, 0x00F0	; 0x8000f0 <__data_end+0x2>
 7c0:	f0 91 f1 00 	lds	r31, 0x00F1	; 0x8000f1 <__data_end+0x3>
 7c4:	23 81       	ldd	r18, Z+3	; 0x03
 7c6:	21 ff       	sbrs	r18, 1
 7c8:	1b c0       	rjmp	.+54     	; 0x800 <puts+0x4c>
 7ca:	8c 01       	movw	r16, r24
 7cc:	d0 e0       	ldi	r29, 0x00	; 0
 7ce:	c0 e0       	ldi	r28, 0x00	; 0
 7d0:	f8 01       	movw	r30, r16
 7d2:	81 91       	ld	r24, Z+
 7d4:	8f 01       	movw	r16, r30
 7d6:	60 91 f0 00 	lds	r22, 0x00F0	; 0x8000f0 <__data_end+0x2>
 7da:	70 91 f1 00 	lds	r23, 0x00F1	; 0x8000f1 <__data_end+0x3>
 7de:	db 01       	movw	r26, r22
 7e0:	18 96       	adiw	r26, 0x08	; 8
 7e2:	ed 91       	ld	r30, X+
 7e4:	fc 91       	ld	r31, X
 7e6:	19 97       	sbiw	r26, 0x09	; 9
 7e8:	88 23       	and	r24, r24
 7ea:	31 f0       	breq	.+12     	; 0x7f8 <puts+0x44>
 7ec:	09 95       	icall
 7ee:	89 2b       	or	r24, r25
 7f0:	79 f3       	breq	.-34     	; 0x7d0 <puts+0x1c>
 7f2:	df ef       	ldi	r29, 0xFF	; 255
 7f4:	cf ef       	ldi	r28, 0xFF	; 255
 7f6:	ec cf       	rjmp	.-40     	; 0x7d0 <puts+0x1c>
 7f8:	8a e0       	ldi	r24, 0x0A	; 10
 7fa:	09 95       	icall
 7fc:	89 2b       	or	r24, r25
 7fe:	19 f0       	breq	.+6      	; 0x806 <puts+0x52>
 800:	8f ef       	ldi	r24, 0xFF	; 255
 802:	9f ef       	ldi	r25, 0xFF	; 255
 804:	02 c0       	rjmp	.+4      	; 0x80a <puts+0x56>
 806:	8d 2f       	mov	r24, r29
 808:	9c 2f       	mov	r25, r28
 80a:	df 91       	pop	r29
 80c:	cf 91       	pop	r28
 80e:	1f 91       	pop	r17
 810:	0f 91       	pop	r16
 812:	08 95       	ret

00000814 <_exit>:
 814:	f8 94       	cli

00000816 <__stop_program>:
 816:	ff cf       	rjmp	.-2      	; 0x816 <__stop_program>
